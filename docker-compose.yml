services:
  # Zookeeper with data persisted
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    volumes:
      # Host folder mapped to /opt/zookeeper-3.4.13/data inside container
      - ./data/zookeeper:/opt/zookeeper-3.4.13/data
    networks:
      - lab8_network

  # Kafka with log dir set and broker ID
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CREATE_TOPICS: "events:1:1"
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka/kafka-logs     
      KAFKA_BROKER_ID: 1                   
    volumes:
      # Docker socket for dynamic config, plus a bind mount for Kafka logs
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/kafka-logs:/kafka/kafka-logs
    depends_on:
      - zookeeper
    networks:
      - lab8_network

  # MySQL database
  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: ghiervis
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: esport
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - lab8_network

  # Receiver service
  receiver:
    build:
      context: ./receiver
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    networks:
      - lab8_network
    volumes:
      - ./logs:/app/logs
      - ./config/receiver:/app/config

  # Storage service
  storage:
    build:
      context: ./storage
      dockerfile: Dockerfile
    ports:
      - "8090:8090"
    depends_on:
      - db
      - kafka
    # Run create_db.py then start the main app
    command: ["sh", "-c", "python create_db.py && python app.py"]
    networks:
      - lab8_network
    volumes:
      - ./logs:/app/logs
      - ./config/storage:/app/config

  analyzer:
    build:
      context: ./analyzer
      dockerfile: Dockerfile
    ports:
      - "8110:8110"
    depends_on:
      - kafka
    networks:
      - lab8_network
    volumes:
      - ./logs:/app/logs
      - ./config/analyzer:/app/config
      - ./data/processing:/app/data/processing

  processing:
    build:
      context: ./processing
      dockerfile: Dockerfile
    ports:
      - "8100:8100"
    depends_on:
      - storage
      - kafka
    networks:
      - lab8_network
    volumes:
      - ./logs:/app/logs
      - ./config/processing:/app/config
      - ./data/processing:/app/data/processing

# Define named volumes and a custom network
volumes:
  mysql_data:

networks:
  lab8_network:
    driver: bridge
